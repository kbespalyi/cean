version: 2
jobs:
  build:
    working_directory: ~/cean-server
    docker:
      - image: circleci/node:9.1.0
    parallelism: 1
    environment:
      IMAGE_NAME: couchbase
      COUCHBASE_HOST: couchbase.cluster
      COUCHBASE_PORT: 8091
      DOCKER_REPO: mdavidallen
      ADMIN_LOGIN: admin
      ADMIN_PASSWORD: admin001*
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
            - dependency-cache- # used if checksum fails
      - run:
          name: Artifacts directory creation
          command: mkdir -p ~/cean-server/artifacts && mkdir -p ~/cean-server/test-results
      - run:
          name: "Install Docker client"
          command: |
            sudo curl -L -o /usr/bin/docker 'https://s3-external-1.amazonaws.com/circle-downloads/docker-1.9.1-circleci'
            sudo chmod 0755 /usr/bin/docker
      - run:
          name: "Starting docker"
          command: |
            docker info >/dev/null 2>&1 || service docker start
            docker version
      - run:
          name: "Docker info"
          command: |
            docker info
            export DOCKERHOST=$(ifconfig | grep -E "([0-9]{1,3}\.){3}[0-9]{1,3}" | grep -v 127.0.0.1 | awk '{ print $2 }' | cut -f2 -d: | head -n1)
            echo Couchbase host: $DOCKERHOST
      - run:
          name: "Docker networks"
          command: |
            docker network create couchbase
            # docker create --name my-nginx --network couchbase --publish 8091:8091 nginx:latest
            # docker network connect couchbase-net my-nginx
      - run:
          name: "Starting couchbase"
          command: |
            # docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker build -t $IMAGE_NAME:$CIRCLE_BUILD_NUM .circleci/
            docker run -d --name couchtest --net=couchbase -h $COUCHBASE_HOST -p 8091-8094:8091-8094 -p 9110:9110 -p 11210:11210 -p 11211:11211 -p 18091-18094:18091-18094 -t $IMAGE_NAME:$CIRCLE_BUILD_NUM
            # docker pull mdavidallen/couchbase:latest
            # docker run -d --name couchtest -p 8091-8094:8091-8094 -p 9110:9110 -p 11210:11210 -p 18091:18091 -p 18092:18092 mdavidallen/couchbase:latest
            sleep 20
            # A running cluster will respond with cluster status.
            docker logs --tail=200 couchtest > ~/cean-server/artifacts/couchbase.log
      - run:
          name: "Test couchbase"
          command: |
            curl -X GET -u $ADMIN_LOGIN:$ADMIN_PASSWORD --retry 20 --retry-delay 10 -v http://$COUCHBASE_HOST:$COUCHBASE_PORT/pools/default/buckets -C -
            # curl http://$COUCHBASE_HOST:$COUCHBASE_PORT/pools/default
      #- run:
      #    name: Update npm
      #    command: 'sudo npm install -g npm@latest'
      - run:
          name: "Checking Versions"
          command: |
            npm set progress=false
            node --version
            npm --version
            if [ -z "$(npm info $(npm ls --depth=-1 2>/dev/null | head -1 | cut -f 1 -d " ") 2>/dev/null)" ] ; then
              echo "version number is fine";
            else
              echo "Please update version number in package.json!"
              exit 1;
            fi
      - run:
          name: Install npm
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Test
          command: npm test
      - run:
          name: Generate code coverage
          command: './node_modules/.bin/nyc report --reporter=text-lcov'
      - store_artifacts:
          path: ~/cean-server/artifacts
          destination: artifacts
      - store_artifacts:
          path: test-results.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: test-results
          destination: test-results/junit
